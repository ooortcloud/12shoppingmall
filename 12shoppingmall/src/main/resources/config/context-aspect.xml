<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation=
				"http://www.springframework.org/schema/beans 
				 http://www.springframework.org/schema/beans/spring-beans.xsd
				 http://www.springframework.org/schema/aop 
				 http://www.springframework.org/schema/aop/spring-aop.xsd">
				
	<!-- 이곳에 명시적 선언한 bean .class 파일들을  root WebApplicationContext에 로드 -->
				
	<!--  AOP 적용 : LOG 를 처리사느  Aspect 선언   -->
	<!-- 1.일반 Bean Definition :: POJO 기반 -->
	<bean 	id="logAspect"		class="com.model2.mvc.common.aspect.LogAspectJ" />
	 
	 <!-- 2. 선언적으로 Point cut / Advice 정의 
	 			:: TestAspectJ02.java(pointCut+advice 합치기(?)) 의 annotation과 아래를 비교 -->
	 <aop:config>
	 	<aop:aspect  ref="logAspect">
	 		<!-- root WebApplicationContext가 지정 경로의 .class 파일들을 LogAspectJ 객체의 target object들로 등록해둔다. -->
	 		<aop:around pointcut="execution(* com.model2.mvc.service..*Impl.*(..) )"	method="invoke"/>
	 	</aop:aspect>
	 </aop:config>

</beans>