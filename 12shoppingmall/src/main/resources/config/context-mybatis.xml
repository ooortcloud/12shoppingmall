<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation=
				"http://www.springframework.org/schema/beans 
				 http://www.springframework.org/schema/beans/spring-beans.xsd">
				
	<!-- 이곳에 명시적 선언한 bean .class 파일들을  root WebApplicationContext에 로드하고 wiring까지 진행 -->
	
	<!-- ㅇ SqlSession 인스턴스를 생성하는 SqlSessionFactory 생성
			- MYbatis query문 동작을 위해 필요한 핵심 객체
	      ㅇ Factory Pattern  적용 :: Spring 의 FactoryBean interface 구현 -->
	<bean 	id="sqlSessionFactoryBean" 
					class="org.mybatis.spring.SqlSessionFactoryBean" >
		<property name="dataSource" ref="dataSource"/>
		<!-- configLocation은 wild card 사용 불가 -->
		<property name="configLocation" value="classpath:sql/mybatis-config.xml"/>
	</bean>
	
	<!--  ㅇ SqlSessionTeampate 인스턴스생성
		   ㅇ Spring 과 연동시 사용하는 핵심 SqlSession 구현체
		   ㅇ Spring 에서 제공한는 Transaction 처리에 구조화된 SqlSession 구현체	 
		   - Mybatis query문 수행 객체
		   -->
	<bean		id="sqlSessionTemplate"		
					class="org.mybatis.spring.SqlSessionTemplate" >		
		<constructor-arg ref="sqlSessionFactoryBean"/>
	</bean>

	<!-- @Mapper의 bean을 생성해주기 위한 작업. 왜 자동으로 적용되지 않는지는 의문 -->
	<bean id="productDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.model2.mvc.service.product.ProductDao"></property>
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate"></property>
	</bean>
	
	<bean id="imagesDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.model2.mvc.service.product.ImagesDao"></property>
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate"></property>
	</bean>
	
	<bean id="purchaseDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.model2.mvc.service.purchase.PurchaseDao"></property>
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate"></property>
	</bean>
	
	<bean id="userDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.model2.mvc.service.user.UserDao"></property>
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate"></property>
	</bean>
	
</beans>